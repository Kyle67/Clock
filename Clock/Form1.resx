<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMwlAADMJQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAfIgAgHyMAIR8jAB8f
        IwAgHyMAIB8jASAfIwIgHyMCIB8jASAfIwAiHyIAHx8jACAfIwAhHiIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAfIwAgHyMAIB8jACAf
        IwAgHyMDIB8jBCAfIwEgHyMAIB8jACAfIwAgHyMAIB8jASAfIwQgHyMDIB8jACAfIwAgHyMAIB8jAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgHyMAIB8jACAf
        IwAgHyMDIB8jAiAfIwAiICUAHR4fACAfIw8gHyMeIB8jHiAfIw8dHiIAIyAkACAfIwAgHyMCIB8jAyAf
        IwAgHyMAIB8jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgHiQAIB8jACAf
        IwAgHyMBIB8jAyAeIwAhICQAIB8jOiAfI5ggHyPfIB8j/iAfI/8gHyP/IB8j/iAfI98gHyOYIB8jOSEd
        IwAgICMAIB8jAyAfIwAgHyMAIB8jAB8fIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAf
        IwAgHyMAIB8jASAfIwMgHyMAIB8jNiAfI8kgHyP/IB8j/SAfI9IgHyObIB8jgSAfI4EgHyObIB8j0iAf
        I/0gHyP/IB8jySAfIzUgHyMAIB8jAyAfIwEgHyMAIB8jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgHyMAIB8jACAfIwEgHyMDIB8jACAfI3wgHyP/IB8j9CAfI4EgHyMbIB8kACAfIwEgHyMAIB8jACAf
        IwEgHyMAIB8jGiAfI38gHyPzIB8j/yAfI3sgHyMAIB8jAyAfIwEgHyMAIB8jAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIB8jACAfIwAgHyMAIB8jAiAfIwAgHyOUIB8j/yAfI7cgHyMYIB8jACAfIwEgHyMBIB8jBCAf
        IwQgHyMEIB8jBCAfIwEgHyMBIB8jACAfIxcgHyO2IB8j/yAfI5IgHyMAIB8jAiAfIwAgHyMAIB8jAAAA
        AAAAAAAAAAAAAAAAAAAgHyMAIB8jACAfIwMgHyMAIB8jfCAfI/8gHyOaIR8jACEfIwAgHyMEIB8jAiAf
        IwAfHyMAIB8jACAfIwIgHyMEIB8jBCAfIwYgHyMIIB8jAiAfIgAgHyOYIB8j/yAfI3ogHyMAIB8jAyAg
        IgAgHyMAAAAAAAAAAAAAAAAAIB8jACAfIwAgHyMCIB8jACAfIzwgHyP/IB8jtSEgIwAgHyMCIB8jAyAf
        IwAgHyMAIB8jACAfIwMgHyMCIB8jACAfIwAhHyMAAAAAAAAAAAAgHyMBHR4hACUgJgAgHyO0IB8j/yAf
        IzogHyMAIB8jAiAfIwAfHiIAAAAAAAAAAAAgHyMAIB8jACAfIwEgHyMAIB8jxSAfI/ogHyMeIB8jACAf
        IwMgHyMAIB8jACAfIwAgHyMDIB8jASAfIwAgHyMhIB8jYSAfI4kgHyORIB8jeCAfI0IgHyMLIB8jACAf
        Ix4gHyP6IB8jwyAfIwAgHyMBIB8jACAfIwAAAAAAAAAAACAfIwAgHyMDIB8jACAfIz4gHyP/IB8jgSAf
        IwAgHyMEIB8jACAfIwAgHyMAIB8jAyAfIwAgHyMtIB8juiAfI/8gHyP+IB8j/yAfI/8gHyP+IB8j/yAf
        I+0gHyN3IB8jACAfI3wgHyP/IB8jPCAfIwAgHyMDIB8jAAAAAAAAAAAAIB8jACAfIwQgHyMAIB8jlyAf
        I/8gHyMiIB8jACAfIwIgHyMAIB8iACAfIwMgHyMAIB8jaCAfI/4gHyP6IB8jmSAfIz8gHyMcIB8jFiAf
        IyogHyNnIB8j1CAfI/8gHyO/IB8jMCAfI/8gHyOYIB8jACAfIwQgHyMAAAAAAAAAAAAgHyMAMyAwACAf
        IwAgHyPcIB8j0iAfIwAgHyMBIB8jAB8fIwAgHyMDIB8jACAfI2kgHyP/IB8jxiAfIyIgHyMAIB8jASAf
        IwAAAAAAIB8jACAfIwAfHiIAIB8jciAfI/8gHyPIIB8j3yAfI9cgHyMAISAjACAfIwAAAAAAAAAAACAf
        IwEgHyMAIB8jECAfI/8gHyOgIB8jACAfIwQgHyMAIB8jAiAfIwAgHyMyIB8j/yAfI8UgHyMJIB8jACAf
        IwEAAAAAIB8jACAfIwAgHyMBIB8jBCAfIwQgHyMAIB8jYCAfI/8gHyP/IB8j7SAfIxIgHyMAIB8jAQAA
        AAAAAAAAIB8jAiAfIwAgHyMeIB8j/yAfI4QgHyMAIB8jBCAfIwAgHyMCIB8jACAfI7UgHyP/IB8jJyAf
        IwAgHyOLIB8j0SAfI8YgHyPSIB8j4SAfI4kgHyMAIB8jAyAfIwUgHyMAIB8jmiAfI/8gHyP2IB8jISAf
        IwAgHyMCAAAAAAAAAAAgHyMCIB8jACAfIx4gHyP/IB8jhCAfIwAgHyMEIB8jAiAfIwAgHyMjIB8j/yAf
        I5YgHyMAIB8jACAfI5YgHyP/IB8j/CAfI84gHyPeIB8jiyAfIwAgHyMCIB8jAiAfIwAgHyMnIB8j+SAf
        I/ggHyMgIB8jACAfIwIAAAAAAAAAACAfIwEgHyMAIB8jECAfI/8gHyOgIB8jACAfIwQgHyMEIB8jACAf
        I14gHyP/IB8jQiAfIwAgHyMDIB8jACAfI5ggHyP/IB8jkB8fJAAfHyQBIB8jACAfIwAgHyMAIB8jAiAf
        IwAgHyPHIB8j+iAfIxAgHyMAIB8jAQAAAAAAAAAAIB8jABAoHwAgHyMAIB8j3CAfI9IgHyMAIB8jASAf
        IwQgHyMAIB8jhSAfI/8gHyMdIB8jACAfIwIgHyMBIB8jACAfI5AgHyP/IB8jmCAfIwAgHyIBIB8jACAf
        IwAgHyMDIB8jACAfI2YgHyOWIB8jACAfIwEgHyMAAAAAAAAAAAAgHyMAIB8jBCAfIwAgHyOXIB8j/yAf
        IyIgHyMAIB8jBiAfIwAgHyOOIB8j/yAfIxYgHyMAIB8jACAfI4sgHyPeIB8jziAfI/wgHyP/IB8jlyAf
        IwAgHyMDIB8jACAfIwAgHyMAIB8jASAfIwAgHyMAIB8jACAfIwAAAAAAAAAAACAfIwAgHyMDIB8jACAf
        Iz4gHyP/IB8jgSAfIwAgHyMIIB8jACAfI3QgHyP/IB8jKyAfIwAgHyMAIB8jiSAfI+EgHyPSIB8jxiAf
        I9EgHyOHIB8jACAfIwMgHyMFIB8jBCAfIwQgHyMHIB8jByAfIwAgHyMAIB8jAAAAAAAAAAAAIB8jACAf
        IwAgHyMBIB8jACAfI8UgHyP7IB8jHiAfIwAgHyMAIB8jQCAfI/8gHyNnIB8jACAfIwQgHyMAIB8jAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAhHyQAIB8jACAfIwIgHyMAIB8jPCAfI/8gHyO2ISAhACAfIgAgHyMKIB8j6CAfI9AhHyMAIB8jAiAf
        IwMfHyMBHx8jAR8fIwEfHyMBIB8jBCAfIwAgHyMlIB8jfiAfI3wgHyN/IB8jgyAfI2kgHyMEIB8jACAf
        IwAAAAAAAAAAAAAAAAAgHyMAIR8jACAfIwMgHyMAIB8jfCAfI/8gHyObIB8jAyAfIwAgHyN1IB8j/yAf
        I20gHyMAIB8jBiAfIwMgHyMAIB8jACAfIwAgHyMEIB8jACAfI2cgHyP/IB8j+yAfI/0gHyP/IB8j7yAf
        IxYgHyMAIB8jAQAAAAAAAAAAAAAAACAfIwAgHyMAIB8jACAfIwIgHyMAIB8jlCAfI/8gHyO5IB8jGSAf
        IwAgHyO7IB8j/yAfI1sgHyMAIB8jAiAfIwIgHyMDIB8jACAfIwAgICQAIB8kACAfI5kgHyP/IB8jtCAf
        IxYgHyMUHh8jAB8fIwAgHyMAAAAAAAAAAAAAAAAAAAAAACAfIwAgHyMAIB8jASAfIwMgHyMAIB8jfCAf
        I/8gHyP2IB8jeyAfIy0gHyPLIB8j/yAfI5sgHyMfIB8jACAfIwEgHyMAAAAAACAfIwAgHyMBIB8jACAf
        I4UgHyP/IB8jkSAfIwAgHyMBIB8jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAfIwAgHyMAIB8jASAf
        IwMgHyMAIB8jNiAfI8kgHyP/IB8j9CAfI+AgHyP/IB8j/yAfI/YgHyPQIB8jYSAfIwAgHyMEIB8jACAf
        IycgHyOAIB8jeCAfI+kgHyP/IB8jniAfIwAgHyMAIB8jAAAAAAAAAAAAAAAAAAAAAAAAAAAAIB4jACAf
        IwAgHyMAIB8jASAfIwMgHyMAIB8jACAfIzkgHyObIB8j2yAfI+8gHyP3IB8j+SAfI/8gHyOUIB8jACAf
        IwcgHyMAIB8jZyAfI/8gHyP8IB8j/CAfI/4gHyPvIB8jFiAfIwAgHyMBAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACAfIwAgHyMAIB8jACAfIwMgHyMCIB8jACEgIwAgICMBIB8jEyAfIyIgHyMiIB8jEB4e
        KQAfHycAIB8jACAfIwAgHyMDIB8jHiAfIyEgHyMjIB8jJiAfIxYgHyMAIB8jACAfIwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACAfIwAgHyMAIB8jACAfIwAgHyMDIB8jBCAfIwEgHyMAIB8jACAf
        IwAgHyMAIB8jASAfIwAgHyMAIB8jACAfIwAgHyMAIB8jACAfIwAgHyMAIB8jACAfIwAgHyMAIB8jAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjHSUAIB8jACAfIwAgHiMAIB8jACAf
        IwEgHyMCIB8jAiAfIwEgHyMAIB8jACAfIwAgHyMAIB8jACAfIwIgHyMCIB8jAiAfIwIgHyMBIB8jAB8f
        IwAgHyMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////wD///QkL//JAJP/oAAF/0gAEv6QQgl+IQCEfUQgIryJS7E8ix
        ARORRACJkSgACbJQkgmiIVEFoiIEhaJGBIWiRRBFskSISZFGBIWRRgQFyMV//8hEBAXUIgQF4hESCekA
        SRP0gBQJ+gAUBfyYJAn/Qkyl//AUCf////8=
</value>
  </data>
</root>